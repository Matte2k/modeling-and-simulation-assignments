#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
     120                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
     240                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(158,37)
Propeller_reference.height
Propeller_reference.y
Propeller_reference.offset
Propeller_reference.startTime
Gear_box.useSupport
Gear_box.flange_a.tau
Gear_box.flange_b.tau
Gear_box.phi_support
Gear_box.ratio
Gear_box.lossTable[1, 1]
Gear_box.lossTable[1, 2]
Gear_box.lossTable[1, 3]
Gear_box.lossTable[1, 4]
Gear_box.lossTable[1, 5]
Gear_box.lossTable[2, 1]
Gear_box.lossTable[2, 2]
Gear_box.lossTable[2, 3]
Gear_box.lossTable[2, 4]
Gear_box.lossTable[2, 5]
Gear_box.lossTable[3, 1]
Gear_box.lossTable[3, 2]
Gear_box.lossTable[3, 3]
Gear_box.lossTable[3, 4]
Gear_box.lossTable[3, 5]
Gear_box.lossTable[4, 1]
Gear_box.lossTable[4, 2]
Gear_box.lossTable[4, 3]
Gear_box.lossTable[4, 4]
Gear_box.lossTable[4, 5]
Gear_box.useHeatPort
Gear_box.lossPower
Gear_box.phi_a
Gear_box.sa
Gear_box.w_a
Gear_box.der(w_a)
Gear_box.interpolation_result[1, 1]
Gear_box.interpolation_result[1, 2]
Gear_box.interpolation_result[1, 3]
Gear_box.interpolation_result[1, 4]
Gear_box.eta_mf1
Gear_box.eta_mf2
Gear_box.tau_bf_a
Gear_box.tau_eta
Gear_box.tau_bf1
Gear_box.tau_bf2
Gear_box.quadrant1
Gear_box.quadrant2
Gear_box.quadrant3
Gear_box.quadrant4
Gear_box.quadrant1_p
Gear_box.quadrant2_p
Gear_box.quadrant3_m
Gear_box.quadrant4_m
Gear_box.tauLoss
Gear_box.tauLossMax
Gear_box.tauLossMin
Gear_box.tauLossMax_p
Gear_box.tauLossMin_m
Gear_box.tau_aPos
Gear_box.startForward
Gear_box.startBackward
Gear_box.locked
Gear_box.ideal
Gear_box.Unknown
Gear_box.Free
Gear_box.Forward
Gear_box.Stuck
Gear_box.Backward
Gear_box.mode
Gear_box.tau_eta_p
Gear_box.tau_eta_m
Gear_box.unitAngularAcceleration
Gear_box.unitTorque
Gear_box.eta_mf1_0
Gear_box.eta_mf2_0
Gear_box.tau_bf1_0
Gear_box.tau_bf2_0
Gear_box.tau_bf_a_0
Gear_wall_capacitance.C
Gear_wall_capacitance.T
Gear_wall_capacitance.der(T)
Gear_wall_thermal_conduction.dT
Gear_wall_thermal_conduction.port_a.T
Gear_wall_thermal_conduction.G
Load_torque.useSupport
Load_torque.flange.tau
Load_torque.phi_support
Load_torque.phi
Load_torque.der(phi)
Load_torque.tau_nominal
Load_torque.TorqueDirection
Load_torque.w_nominal
Shaft_inertia.J
Shaft_inertia.stateSelect
Shaft_inertia.w
Shaft_inertia.der(w)
speedSensor.flange.tau
PID.u
PID.y
PID.k
PID.Ti
PID.Td
PID.Nd
PID.initType
PID.xi_start
PID.xd_start
PID.y_start
PID.unitTime
PID.P.k
PID.P.y
PID.I.k
PID.I.use_reset
PID.I.use_set
PID.I.initType
PID.I.y_start
PID.I.y
PID.I.der(y)
PID.I.local_reset
PID.I.local_set
PID.D.k
PID.D.T
PID.D.initType
PID.D.x_start
PID.D.y_start
PID.D.y
PID.D.x
PID.D.der(x)
PID.D.zeroGain
PID.Gain.k
PID.Gain.u
PID.Add.k1
PID.Add.k2
PID.Add.k3
signalVoltage.n.v
Coil_resistance.R
Coil_resistance.T_ref
Coil_resistance.alpha
Coil_resistance.v
Coil_resistance.n.v
Coil_resistance.useHeatPort
Coil_resistance.T
Coil_resistance.LossPower
Coil_resistance.R_actual
Inductance.v
Inductance.n.v
Inductance.i
Inductance.der(i)
Inductance.L
Motor_constant.useSupport
Motor_constant.k
Motor_constant.phi
Motor_constant.tau
Motor_constant.n.v
Motor_constant.fixed.phi0
Ground.p.v
Ground.p.i
Motor_inertia.J
Motor_inertia.stateSelect

double initialValue(158,6)
 -1     210                       0                       0                
  1   280   # Propeller_reference.height
 -2     210                       0                       0                
  6   320   # Propeller_reference.y
 -1       0                       0                       0                
  1   280   # Propeller_reference.offset
 -1       5                       0                       0                
  1   280   # Propeller_reference.startTime
 -2       0                       0                       0                
  6   769   # Gear_box.useSupport
 -2 -4.4735950413389475E+01       0                       0                
  6   388   # Gear_box.flange_a.tau
 -2  1.0000000000035934E+02       0                       0                
  6   388   # Gear_box.flange_b.tau
 -2       0                       0                       0                
  6  1280   # Gear_box.phi_support
 -1       2                       0                       0                
  1   280   # Gear_box.ratio
 -1       0                       0                       0                
  1   280   # Gear_box.lossTable[1, 1]
 -1  9.8999999999999999E-01       0                       0                
  1   280   # Gear_box.lossTable[1, 2]
 -1  9.8999999999999999E-01       0                       0                
  1   280   # Gear_box.lossTable[1, 3]
 -1       0                       0                       0                
  1   280   # Gear_box.lossTable[1, 4]
 -1       0                       0                       0                
  1   280   # Gear_box.lossTable[1, 5]
 -1      50                       0                       0                
  1   280   # Gear_box.lossTable[2, 1]
 -1  9.7999999999999998E-01       0                       0                
  1   280   # Gear_box.lossTable[2, 2]
 -1  9.7999999999999998E-01       0                       0                
  1   280   # Gear_box.lossTable[2, 3]
 -1  5.0000000000000000E-01       0                       0                
  1   280   # Gear_box.lossTable[2, 4]
 -1  5.0000000000000000E-01       0                       0                
  1   280   # Gear_box.lossTable[2, 5]
 -1     100                       0                       0                
  1   280   # Gear_box.lossTable[3, 1]
 -1  9.6999999999999997E-01       0                       0                
  1   280   # Gear_box.lossTable[3, 2]
 -1  9.6999999999999997E-01       0                       0                
  1   280   # Gear_box.lossTable[3, 3]
 -1       1                       0                       0                
  1   280   # Gear_box.lossTable[3, 4]
 -1       1                       0                       0                
  1   280   # Gear_box.lossTable[3, 5]
 -1     210                       0                       0                
  1   280   # Gear_box.lossTable[4, 1]
 -1  9.5999999999999996E-01       0                       0                
  1   280   # Gear_box.lossTable[4, 2]
 -1  9.5999999999999996E-01       0                       0                
  1   280   # Gear_box.lossTable[4, 3]
 -1  1.5000000000000000E+00       0                       0                
  1   280   # Gear_box.lossTable[4, 4]
 -1  1.5000000000000000E+00       0                       0                
  1   280   # Gear_box.lossTable[4, 5]
 -2       1                       0                       0                
  6   769   # Gear_box.useHeatPort
 -2  2.2109008264535400E+03       0                       0                
  6   256   # Gear_box.lossPower
 -2  4.7827875929751921E+04       0                       0                
  6   256   # Gear_box.phi_a
 -2  5.2640495864270322E+00       0                       0                
  6   256   # Gear_box.sa
 -2  4.2000000000031525E+02       0                       0                
  6   256   # Gear_box.w_a
 -2 -3.6315928042540691E-10       0                       0                
  6   256   # Gear_box.der(w_a)
 -2  9.4090909090906216E-01       0                       0                
  6   256   # Gear_box.interpolation_result[1, 1]
 -2  9.4090909090906216E-01       0                       0                
  6   256   # Gear_box.interpolation_result[1, 2]
 -2  2.4545454545468877E+00       0                       0                
  6   256   # Gear_box.interpolation_result[1, 3]
 -2  2.4545454545468877E+00       0                       0                
  6   256   # Gear_box.interpolation_result[1, 4]
 -2  9.4090909090906216E-01       0                       0                
  6   256   # Gear_box.eta_mf1
 -2  9.4090909090906216E-01       0                       0                
  6   256   # Gear_box.eta_mf2
 -2       0                       0                       0                
  6   256   # Gear_box.tau_bf_a
 -2 -4.4735950413389475E+01       0                       0                
  6   256   # Gear_box.tau_eta
 -2  2.4545454545468877E+00       0                       0                
  6   256   # Gear_box.tau_bf1
 -2  2.4545454545468877E+00       0                       0                
  6   256   # Gear_box.tau_bf2
 -2 -1.8894252442741255E-01       0                       0                
  6   256   # Gear_box.quadrant1
 -2  5.2640495867901915E+00       0                       0                
  6   256   # Gear_box.quadrant2
 -2 -5.0980334335211879E+00       0                       0                
  6   256   # Gear_box.quadrant3
 -2  3.5495867769641620E-01       0                       0                
  6   256   # Gear_box.quadrant4
 -2 -4.4735950413389514E-01       0                       0                
  6   256   # Gear_box.quadrant1_p
 -2  4.5187828700393701E-01       0                       0                
  6   256   # Gear_box.quadrant2_p
 -2 -4.4735950413389514E-01       0                       0                
  6   256   # Gear_box.quadrant3_m
 -2  4.5187828700393701E-01       0                       0                
  6   256   # Gear_box.quadrant4_m
 -2  5.2640495867901915E+00       0                       0                
  6   256   # Gear_box.tauLoss
 -2  5.2640495867901915E+00       0                       0                
  6   256   # Gear_box.tauLossMax
 -2 -5.0980334335211879E+00       0                       0                
  6   256   # Gear_box.tauLossMin
 -2  4.5187828700393701E-01       0                       0                
  6   256   # Gear_box.tauLossMax_p
 -2 -4.4735950413389514E-01       0                       0                
  6   256   # Gear_box.tauLossMin_m
 -2       0                       0                       0                
  6   353   # Gear_box.tau_aPos
 -2       0                       0                       0                
  6   353   # Gear_box.startForward
 -2       0                       0                       0                
  6   353   # Gear_box.startBackward
 -2       0                       0                       0                
  6   353   # Gear_box.locked
 -2       0                       0                       0                
  6   257   # Gear_box.ideal
 -2       3                       0                       0                
  6   258   # Gear_box.Unknown
 -2       2                       0                       0                
  6   258   # Gear_box.Free
 -2       1                       0                       0                
  6   258   # Gear_box.Forward
 -2       0                       0                       0                
  6   258   # Gear_box.Stuck
 -2      -1                       0                       0                
  6   258   # Gear_box.Backward
 -2       1                      -1                       3                
  6   330   # Gear_box.mode
 -2 -4.4735950413389475E+01       0                       0                
  6   256   # Gear_box.tau_eta_p
 -2 -4.4735950413389475E+01       0                       0                
  6   256   # Gear_box.tau_eta_m
 -2       1                       0                       0                
  6  1280   # Gear_box.unitAngularAcceleration
 -2       1                       0                       0                
  6  1280   # Gear_box.unitTorque
 -2  9.8999999999999999E-01       0                       0                
  6  1280   # Gear_box.eta_mf1_0
 -2  9.8999999999999999E-01       0                       0                
  6  1280   # Gear_box.eta_mf2_0
 -2       0                       0                       0                
  6  1280   # Gear_box.tau_bf1_0
 -2       0                       0                       0                
  6  1280   # Gear_box.tau_bf2_0
 -2       0                       0                       0                
  6  1280   # Gear_box.tau_bf_a_0
 -1    3000                       0                       0                
  1   280   # Gear_wall_capacitance.C
 -2  3.7649665830190884E+02       0                 1.0000000000000000E+100
  2   280   # Gear_wall_capacitance.T
 -2  7.3696694215117997E-01       0                       0                
  3   256   # Gear_wall_capacitance.der(T)
 -2  2.2109008264535401E+01       0                       0                
  6   256   # Gear_wall_thermal_conduction.dT
 -2  3.9860566656644426E+02       0                 1.0000000000000000E+100
  6   260   # Gear_wall_thermal_conduction.port_a.T
 -1     100                       0                       0                
  1   280   # Gear_wall_thermal_conduction.G
 -2       0                       0                       0                
  6   769   # Load_torque.useSupport
 -2 -1.0000000000015015E+02       0                       0                
  6   388   # Load_torque.flange.tau
 -2       0                       0                       0                
  6  1280   # Load_torque.phi_support
 -2  2.3913937964875960E+04       0                       0                
  2   280   # Load_torque.phi
 -2  2.1000000000015763E+02       0                       0                
  3   256   # Load_torque.der(phi)
 -1     100                       0                       0                
  1   280   # Load_torque.tau_nominal
 -2       1                       0                       0                
  6   257   # Load_torque.TorqueDirection
 -1     210                  1.0000000000000001E-15 1.0000000000000000E+100
  1   280   # Load_torque.w_nominal
 -1  1.1520000000000001E+00       0                 1.0000000000000000E+100
  1   280   # Shaft_inertia.J
 -2       3                       1                       5                
  6   770   # Shaft_inertia.stateSelect
 -2  2.1000000000015763E+02       0                       0                
  2   280   # Shaft_inertia.w
 -2 -1.8157919849846092E-10       0                       0                
  3   256   # Shaft_inertia.der(w)
 -2       0                       0                       0                
  6   388   # speedSensor.flange.tau
 -2 -1.5762680050102063E-10       0                       0                
  6   256   # PID.u
 -2  1.1108801652895436E+02       0                       0                
  6   256   # PID.y
 -1  8.0000000000000002E-02       0                       0                
  1   280   # PID.k
 -1  1.7000000000000001E-01  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # PID.Ti
 -1  5.0000000000000000E-01       0                 1.0000000000000000E+100
  1   280   # PID.Td
 -1      10                  9.9999999999999997E-61 1.0000000000000000E+100
  1   280   # PID.Nd
 -2       3                       1                       4                
  6   258   # PID.initType
 -1       0                       0                       0                
  1   280   # PID.xi_start
 -1       0                       0                       0                
  1   280   # PID.xd_start
 -1       0                       0                       0                
  1   280   # PID.y_start
 -2       1                       0                       0                
  6   768   # PID.unitTime
 -1       1                       0                       0                
  1   280   # PID.P.k
 -2 -1.5762680050102063E-10       0                       0                
  6   256   # PID.P.y
 -2  5.8823529411764701E+00       0                       0                
  6   256   # PID.I.k
 -2       0                       0                       0                
  6   769   # PID.I.use_reset
 -2       0                       0                       0                
  6   769   # PID.I.use_set
 -2       3                       1                       4                
  6   258   # PID.I.initType
 -2       0                       0                       0                
  6   256   # PID.I.y_start
 -2  1.3886002066119941E+03       0                       0                
  2   272   # PID.I.y
 -2 -9.2721647353541535E-10       0                       0                
  3   256   # PID.I.der(y)
 -2       0                       0                       0                
  6   769   # PID.I.local_reset
 -2       0                       0                       0                
  6   768   # PID.I.local_set
 -2  5.0000000000000000E-01       0                       0                
  6   256   # PID.D.k
 -2  5.0000000000000003E-02  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # PID.D.T
 -2       3                       1                       4                
  6   258   # PID.D.initType
 -2       0                       0                       0                
  6   256   # PID.D.x_start
 -1       0                       0                       0                
  1   280   # PID.D.y_start
 -2  9.3052741288568939E-11       0                       0                
  6   256   # PID.D.y
 -2 -1.6693207462987752E-10       0                       0                
  2   272   # PID.D.x
 -2  1.8610548257713788E-10       0                       0                
  3   256   # PID.D.der(x)
 -2       0                       0                       0                
  6  1281   # PID.D.zeroGain
 -2  8.0000000000000002E-02       0                       0                
  6   256   # PID.Gain.k
 -2  1.3886002066119295E+03       0                       0                
  6   256   # PID.Gain.u
 -1       1                       0                       0                
  1   280   # PID.Add.k1
 -1       1                       0                       0                
  1   280   # PID.Add.k2
 -1       1                       0                       0                
  1   280   # PID.Add.k3
 -2       0                       0                       0                
  6   260   # signalVoltage.n.v
 -1  1.0000000000000001E-01       0                       0                
  1   280   # Coil_resistance.R
 -1  3.0014999999999998E+02       0                 1.0000000000000000E+100
  1   280   # Coil_resistance.T_ref
 -1       0                       0                       0                
  1   280   # Coil_resistance.alpha
 -2 -1.4911983471129947E+01       0                       0                
  6   256   # Coil_resistance.v
 -2  1.2600000000008430E+02       0                       0                
  6   260   # Coil_resistance.n.v
 -2       0                       0                       0                
  6   769   # Coil_resistance.useHeatPort
 -2  3.0014999999999998E+02       0                 1.0000000000000000E+100
  6   256   # Coil_resistance.T
 -2  2.2236725104325274E+03       0                       0                
  6   256   # Coil_resistance.LossPower
 -2  1.0000000000000001E-01       0                       0                
  6   256   # Coil_resistance.R_actual
 -2 -1.0274447959091049E-11       0                       0                
  6   256   # Inductance.v
 -2  1.2600000000009457E+02       0                       0                
  6   260   # Inductance.n.v
 -2 -1.4911983471129946E+02       0                       0                
  2   280   # Inductance.i
 -2 -1.0274447959091049E-09       0                       0                
  3   256   # Inductance.der(i)
 -1  1.0000000000000000E-02       0                       0                
  1   280   # Inductance.L
 -2       0                       0                       0                
  6   769   # Motor_constant.useSupport
 -1  2.9999999999999999E-01       0                       0                
  1   280   # Motor_constant.k
 -2  4.7827875929751921E+04       0                       0                
  6   256   # Motor_constant.phi
 -2  4.4735950413389837E+01       0                       0                
  6   256   # Motor_constant.tau
 -2       0                       0                       0                
  6   260   # Motor_constant.n.v
 -1       0                       0                       0                
  1  1304   # Motor_constant.fixed.phi0
 -2       0                       0                       0                
  6   260   # Ground.p.v
 -2       0                       0                       0                
  6   388   # Ground.p.i
 -1  1.0000000000000000E-03       0                 1.0000000000000000E+100
  1   280   # Motor_inertia.J
 -2       3                       1                       5                
  6   770   # Motor_inertia.stateSelect


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, the initialization is performed in the normal way.
#
# - If parameters and inputs are FIXED, and all other variables
#   have special case for continue (-2 in 1st column), or FREE
#   the initialization is ignored and variables are set to these values.
#   This is intended to continue the simulation.
#
#   Which variables will be important for initialization and continue
#   is indicated by value in column 6 & dsStartMasks.
#
char initialDescription(158,163)
Height of step [rad/s]
Connector of Real output signal [rad/s]
Offset of output signal y [rad/s]
Output y = offset for time < startTime [s]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi) [1]
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
Array for mesh efficiencies and bearing friction depending on speed
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Angle between left shaft flange and support [rad|deg]
Path parameter for acceleration and torque loss [1]
Angular velocity of flange_a with respect to support [rad/s]
der(Angular velocity of flange_a with respect to support) [rad/s2]
Result of interpolation in lossTable (= [eta_mf1, eta_mf2, tau_bf1, tau_bf2])
Result of interpolation in lossTable (= [eta_mf1, eta_mf2, tau_bf1, tau_bf2])
Result of interpolation in lossTable (= [eta_mf1, eta_mf2, tau_bf1, tau_bf2])
Result of interpolation in lossTable (= [eta_mf1, eta_mf2, tau_bf1, tau_bf2])
Mesh efficiency in case that flange_a is driving [1]
Mesh efficiency in case that flange_b is driving [1]
Bearing friction torque on flange_a side [N.m]
Torque that determines the driving side (= if forwardSliding then flange_a.tau-tau_bf_a else if backwardSliding then flange_a.tau+tau_bf_a else flange_a.tau) [N.m]
Absolute resultant bearing friction torque with respect to flange_a in case that flange_a is driving (= |tau_bf_a*eta_mf1 + tau_bf_b/i|) [N.m]
Absolute resultant bearing friction torque with respect to flange_a in case that flange_b is driving (= |tau_bf_a/eta_mf2 + tau_bf_b/i|) [N.m]
Torque loss if w_a > 0 and flange_a.tau >= 0 [N.m]
Torque loss if w_a > 0 and flange_a.tau < 0 [N.m]
Torque loss if w_a < 0 and flange_a.tau >= 0 [N.m]
Torque loss if w_a < 0 and flange_a.tau < 0 [N.m]
Torque loss at w_a = 0+ to determine driving side (flange_a.tau >= 0) [N.m]
Torque loss at w_a = 0+ to determine driving side (flange_a.tau < 0) [N.m]
Torque loss at w_a = 0- to determine driving side (flange_a.tau >=0) [N.m]
Torque loss at w_a = 0- to determine driving side (flange_a.tau < 0) [N.m]
Torque loss due to friction in the gear teeth and in the bearings [N.m]
Torque loss for positive speed [N.m]
Torque loss for negative speed [N.m]
Torque loss for positive speed [N.m]
Torque loss for negative speed [N.m]
Only for backwards compatibility (was previously: true, if torque of flange_a is not negative) [:#(type=Boolean)]
= true, if starting to roll forward [:#(type=Boolean)]
= true, if starting to roll backward [:#(type=Boolean)]
= true, if gear is locked [:#(type=Boolean)]
= true, if losses are neglected (that is lossTable = [0, 1, 1, 0, 0]) [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_a > 0 (forward rolling) [:#(type=Integer)]
w_a = 0 (forward rolling, locked or backward rolling) [:#(type=Integer)]
w_a < 0 (backward rolling) [:#(type=Integer)]
Mode of friction element (unknown, not active, forward/backward rolling, stuck) [:#(type=Integer)]
tau_eta assuming positive omega [N.m]
tau_eta assuming negative omega [N.m]
[rad/s2]
[N.m]
[1]
[1]
[N.m]
[N.m]
[N.m]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Constant thermal conductance of material [W/K]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Angle of flange with respect to support (= flange.phi - support.phi) [rad|deg]
der(Angle of flange with respect to support (= flange.phi - support.phi)) [rad/s]
Nominal torque (if negative, torque is acting as load in positive direction of rotation) [N.m]
Same direction of torque in both directions of rotation [:#(type=Boolean)]
Nominal speed [rad/s]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Cut torque in the flange [N.m]
Connector of Real input signal [rad/s]
Connector of Real output signal [V]
Gain [1]
Time Constant of Integrator [s]
Time Constant of Derivative block [s]
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value for integrator output (= integrator state) [rad]
Initial or guess value for state of derivative block [rad/s]
Initial value of output [V]
[s]
Gain value multiplied with input signal [1]
Output signal connector [rad/s]
Integrator gain [1]
= true, if reset port enabled [:#(type=Boolean)]
= true, if set port enabled and used as reinitialization value when reset [:#(type=Boolean)]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state) [rad]
Connector of Real output signal [rad]
der(Connector of Real output signal) [rad/s]
[:#(type=Boolean)]

Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state [rad/s]
Initial value of output (= state) [rad/s2]
Connector of Real output signal [rad/s2]
State of block [rad/s]
der(State of block) [rad/s2]
[:#(type=Boolean)]
Gain value multiplied with input signal [1]
Input signal connector
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
Torque of flange [N.m]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Potential at the pin [V]
Current flowing into the pin [A]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]

